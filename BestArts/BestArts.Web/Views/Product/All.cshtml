@model AllProductsQueryModel

@using Microsoft.AspNetCore.Identity;
@using BestArts.Data.Models
@using BestArts.Web.Infrastructure.Extensions

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Handmade";

    var products = Model.Products.ToList();
}

@section css {
    <link rel="stylesheet" href="~/css/styles_products.css" asp-append-version="true" />
}


<div class="content-wrap stones">
    @if (User.IsAdmin())
    {
        <a class="add-btn button" asp-area="" asp-controller="Product" asp-action="Add">Add</a>
    }

    <h2 class="page-title divider">@ViewData["Title"]</h2>

    <section class="filter-section">
        <form class="filter-form" method="get">
            <div>
                <div class="form-group">
                    <label asp-for="ProductSorting"></label>
                    <select asp-for="ProductSorting" class="form-control">
                        <option value="0">Newest</option>
                        <option value="1">Oldest</option>
                        <option value="2">Price (Ascending)</option>
                        <option value="3">Price (Descending)</option>
                    </select>
                </div>

                <div class="form-group">
                    <label asp-for="Category"></label>
                    <select asp-for="Category">
                        <option value="">All</option>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>

                @*<div class="form-group">
                <label asp-for="ProductsPerPage"></label>
                <select asp-for="ProductsPerPage">
                <option value="12">12</option>
                <option value="24">24</option>
                <option value="36">36</option>
                </select>
                </div>*@

                <div class="form-group">
                    <label asp-for="SearchString"></label>
                    <input asp-for="SearchString" class="form-control" placeholder="Search by text">
                </div>

                <div class="form-group">
                    <input type="submit" value="Search" class="search-btn" />
                </div>
            </div>
        </form>
    </section>

    <section class="pagination-section">
        <div class="pagination">
            @{
                int previousPage = Model.CurrentPage - 1;
                if (previousPage < 1)
                {
                    previousPage = 1;
                }

                int productsPerPage = Model.ProductsPerPage;

                int totalProducts = Model.TotalProducts;

                int maxPage = (int)Math.Ceiling((double)Model.TotalProducts / Model.ProductsPerPage);
            }

            <div class="pagination-arrow">
                <a class="btn-arrow @(Model.CurrentPage == 1 ? "link-disabled" : string.Empty)"
                   asp-controller="Product"
                   asp-action="All"
                   asp-route-currentPage="@previousPage"
                   asp-route-category="@Model.Category"
                   asp-route-searchTerm="@Model.SearchString"
                   asp-route-sorting="@((int)Model.ProductSorting)"><i class="fa-solid fa-circle-arrow-left"></i></a>
            </div>

            <div class="pagination-pages">
                @for (int i = 1; i <= maxPage; i++)
                {
                    <a class="page-number @(Model.CurrentPage == i ? "link-disabled current-page" : string.Empty)"
                   asp-controller="Product"
                   asp-action="All"
                   asp-route-currentPage="@i"
                   asp-route-category="@Model.Category"
                   asp-route-searchTerm="@Model.SearchString"
                   asp-route-sorting="@((int)Model.ProductSorting)">@i</a>
                }
            </div>

            @{
                bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
                !Model.Products.Any();
            }

            <div class="pagination-arrow">
                <a class="btn-arrow @(shouldNextPageBeDisabled ? "link-disabled" : string.Empty)"
                   asp-controller="Product"
                   asp-action="All"
                   asp-route-currentPage="@(Model.CurrentPage + 1)"
                   asp-route-category="@Model.Category"
                   asp-route-searchTerm="@Model.SearchString"
                   asp-route-sorting="@((int)Model.ProductSorting)"><i class="fa-solid fa-circle-arrow-right"></i></a>
            </div>
        </div>
    </section>

    @if (!products.Any())
    {
        <span>
            Welcome to the Handmade page!
            <br />
            There are no products currently available.
            <br />
            Please check again later.
        </span>
    }
    else
    {
        <section class="product-list">
            @foreach (var product in products)
            {
                <partial name="_ProductPartial" model="@product" />
            }
        </section>
    }
</div>